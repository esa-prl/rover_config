<?xml version="1.0"?>
<robot name="marta" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <!-- PHYSICS -->
  <xacro:property name="damping" value="2" />
  <xacro:property name="friction" value="0.1" />

  <!-- CHASSIS -->
  <xacro:property name="chassis_mass" value="10.0" />
  <xacro:property name="chassis_x" value="0.569" />
  <xacro:property name="chassis_y" value="0.48" />
  <xacro:property name="chassis_z" value="0.343" />
  
  <!-- SIDE BOGIE -->
  <!-- TODO: FIX INTERTIA and mass. Mass
  values were multiplied by 10 as the model exploded otherwise due to low inertia.
  The real values are commented out.-->
  
  <!-- <xacro:property name="side_bogie_mass" value="0.15" /> -->
  <xacro:property name="side_bogie_mass" value="1.5" />
  <xacro:property name="side_bogie_l" value="0.26" />
  <xacro:property name="side_bogie_r" value="0.0125" />
  <xacro:property name="side_bogie_pos_x" value="0.206" />
  <xacro:property name="side_bogie_pos_y" value="0.266" />
  <xacro:property name="side_bogie_pos_z" value="-0.015" />

  <!-- REAR BOGIE -->
  <!-- <xacro:property name="rear_bogie_mass" value="0.4" /> -->
  <xacro:property name="rear_bogie_mass" value="4" />
  <xacro:property name="rear_bogie_l" value="0.559" />
  <xacro:property name="rear_bogie_r" value="0.0125" />
  <xacro:property name="rear_bogie_pos_x" value="-0.316" />
  <xacro:property name="rear_bogie_pos_y" value="0" />
  <xacro:property name="rear_bogie_pos_z" value="-0.015" />

  <!-- DEPLOYMENT JOINT -->
  <!-- <xacro:property name="dep_mass" value="0.57" /> -->
  <xacro:property name="dep_mass" value="5.7" />
  <xacro:property name="dep_x" value="0.056" />
  <xacro:property name="dep_y" value="0.088" />
  <xacro:property name="dep_z" value="0.0855" />

  <xacro:property name="side_dep_pos_front_x" value="0.14" />
  <xacro:property name="side_dep_pos_mid_x" value="0.12" />
  <xacro:property name="side_dep_pos_y" value="-0.01" />
  <xacro:property name="side_dep_pos_z" value="0.0685" />

  <xacro:property name="rear_dep_pos_x" value="0.335" />
  <xacro:property name="rear_dep_pos_y" value="-0.01" />
  <xacro:property name="rear_dep_pos_z" value="0.0325" />

  <!-- STEERING JOINT -->
  <!-- <xacro:property name="str_mass" value="0.025" /> -->
  <xacro:property name="str_mass" value="0.25" />
  <xacro:property name="str_x" value="0.079" />
  <xacro:property name="str_y" value="0.0435" />
  <xacro:property name="str_z" value="0.1015" />

  <xacro:property name="str_pos_short_x" value="0.02" />
  <xacro:property name="str_pos_long_x" value="0.045" />
  <xacro:property name="str_pos_y" value="0.031" />
  <xacro:property name="str_pos_z" value="0.0305" />


  <!-- WHEEL -->
  <!-- <xacro:property name="wheel_mass" value="0.23" /> -->
  <xacro:property name="wheel_mass" value="2.3" />
  <xacro:property name="wheel_x" value="0.0" />
  <xacro:property name="wheel_y" value="0.0" />
  <xacro:property name="wheel_z" value="-0.0885" />

  <xacro:property name="wheel_l" value="0.06" />
  <xacro:property name="wheel_r" value="${0.1425 / 2}" />

  <!-- DRIVE LIMITS -->
  <xacro:property name="limit_drive_effort" value="1000.0" />
  <xacro:property name="limit_drive_velocity" value="1.0" />
  <xacro:property name="limit_steer_effort" value="1000.0" />
  <xacro:property name="limit_steer_lower" value="${-100*pi/180}" />
  <xacro:property name="limit_steer_upper" value="${ 100*pi/180}" />
  <xacro:property name="limit_steer_velocity" value="1.0" />

  <!-- BOGIE ROTATION LIMITS -->
  <xacro:property name="bogie_lower" value="${-pi / 4}" />
  <xacro:property name="bogie_upper" value="${ pi / 4}" />

  <!-- Import all Gazebo-customization elements, including Gazebo colors and plugins -->
  <xacro:include filename="$(find rover_config)/urdf/marta.gazebo" />

  <!-- CHASSIS DEFINITION (must be called base_link)-->
  <link name="base_link">
    <collision>
      <origin xyz="0 0 ${chassis_z / 2 - 0.03}" rpy="0 0 0"/>
      <geometry>
        <box size="${chassis_x} ${chassis_y} ${chassis_z}"/>
      </geometry>
    </collision>
    <inertial>
       <mass value="${chassis_mass}"/>
        <inertia
            ixx="${chassis_mass / 12.0 * (chassis_y * chassis_z / 12)}"
            izz="${chassis_mass / 12.0 * (chassis_x * chassis_z / 12)}"
            iyy="${chassis_mass / 12.0 * (chassis_x * chassis_z / 12)}"
            ixy="0"
            ixz="0"
            iyz="0"/>
    </inertial>
    <visual>
      <origin xyz="0 0 ${chassis_z / 2 - 0.03}" rpy="0 0 0"/>
      <geometry>
        <box size="${chassis_x} ${chassis_y} ${chassis_z}"/>
      </geometry>
    </visual>
  </link>

  <!-- BOGIE DEFINITION -->
  <xacro:macro name="bogie" params="position bogie_mass bogie_r bogie_l *origin_bogie *geometry">

    <xacro:property name="bogie_link" value="link_bogie_${position}" />

    <joint name="joint_bogie_${position}" type="revolute">
      <parent link="base_link"/>
      <child link="link_bogie_${position}"/>
      <xacro:insert_block name="origin_bogie" />
      <limit effort="0" lower="${bogie_lower}" upper="${bogie_upper}" velocity="0"/>
      <axis xyz="0 0 1"/>
    </joint>

    <link name="link_bogie_${position}">
      <collision>
        <origin xyz="0 0 0" rpy="0 ${pi / 2} 0"/>
        <geometry>
          <xacro:insert_block name="geometry" />
        </geometry>
      </collision>

      <inertial>
        <mass value="${bogie_mass}"/>
        <inertia
              ixx="${bogie_mass / 12.0 * (3 * bogie_r * bogie_r + bogie_l * bogie_l)}"
              iyy="${bogie_mass / 12.0 * (3 * bogie_r * bogie_r + bogie_l * bogie_l)}"
              izz="${bogie_mass /  2.0 *  bogie_r * bogie_r}"
              ixy="0"
              ixz="0"
              iyz="0"/>
      </inertial>

      <visual>
        <origin xyz="0 0 0" rpy="0 ${pi / 2} 0"/>
        <geometry>
          <xacro:insert_block name="geometry" />
        </geometry>
      </visual>
    </link>

  </xacro:macro>

  <!-- Definition for a wheel assembly -->
  <!-- Driving direction is used to invert the direction of the deployment and driving joint -->
  <xacro:macro name="wheel_assembly" params="position bogie_name driving_direction *origin_DEP *origin_STR">
    <!-- DEPLOYMENT JOINT -->
    <joint name="joint_DEP_${position}" type="revolute">
      <parent link="link_bogie_${bogie_name}"/>
      <child link="link_DEP_${position}"/>
      <limit effort="${limit_steer_effort}" lower="${limit_steer_lower}" upper="${limit_steer_upper}" velocity="${limit_steer_velocity}"/>
      <xacro:insert_block name="origin_DEP" />
      <axis xyz="0 0 ${driving_direction}"/>
      <dynamics damping="${damping}" friction="${friction}"/>
    </joint>

    <!-- DEPLOYMENT LINK-->
    <link name="link_DEP_${position}">
      <collision>
        <origin xyz="0 0 -${dep_z/2}" rpy="0 0 0"/>
        <geometry>
          <box size="${dep_x} ${dep_y} ${dep_z}"/>
        </geometry>
      </collision>
      <inertial>
          <mass value="${dep_mass}"/>
          <inertia
              ixx="${dep_mass / 12.0 * (dep_y * dep_z / 2)}"
              iyy="${dep_mass / 12.0 * (dep_x * dep_z / 2)}"
              izz="${dep_mass / 12.0 * (dep_x * dep_y / 2)}"
              ixy="0"
              ixz="0"
              iyz="0"/>
      </inertial>
      <visual>
        <origin xyz="0 0 -${dep_z/2}" rpy="0 0 0"/>
        <geometry>
          <box size="${dep_x} ${dep_y} ${dep_z}"/>
        </geometry>
      </visual>
    </link>


    <!-- STEERING JOINT -->
    <joint name="joint_STR_${position}" type="revolute">
      <parent link="link_DEP_${position}"/>
      <child link="link_STR_${position}"/>
      <limit effort="${limit_steer_effort}" lower="${limit_steer_lower}" upper="${limit_steer_upper}" velocity="${limit_steer_velocity}"/>
      <xacro:insert_block name="origin_STR" />
      <axis xyz="0 0 1"/>
      <dynamics damping="${damping}" friction="${friction}"/>
    </joint>

    <!-- STEERING LINK -->
    <link name="link_STR_${position}">
      <collision>
        <origin xyz="0 0 ${str_z/2}" rpy="0 0 0"/>
        <geometry>
          <box size="${str_x} ${str_y} ${str_z}"/>
        </geometry>
      </collision>
      <inertial>
          <mass value="${str_mass}"/>
          <inertia
              ixx="${str_mass / 12.0 * (str_y * str_z / 2)}"
              iyy="${str_mass / 12.0 * (str_x * str_z / 2)}"
              izz="${str_mass / 12.0 * (str_x * str_y / 2)}"
              ixy="0"
              ixz="0"
              iyz="0"/>
      </inertial>
      <visual>
        <origin xyz="0 0 ${str_z/2}" rpy="0 0 0"/>
        <geometry>
          <box size="${str_x} ${str_y} ${str_z}"/>
        </geometry>
      </visual>
      <visual>
        <origin xyz="0.0 0.049 -0.0545" rpy="0 0 0"/>
        <geometry>
          <box size="0.044 0.006 0.109"/>
        </geometry>
      </visual>

    </link>

    <!-- DRIVING JOINT -->
    <joint name="joint_DRV_${position}" type="continuous">
      <parent link="link_STR_${position}"/>
      <child link="link_DRV_${position}"/>
      <limit effort="${limit_drive_effort}" velocity="${limit_drive_velocity}"/>
      <origin xyz="${wheel_x} ${wheel_y} ${wheel_z}" rpy="-1.57 0 0"/>
      <axis xyz="0 0 ${driving_direction}"/>
      <dynamics damping="${damping}" friction="${friction}"/>
    </joint>

    <!-- DRIVING LINK -->
    <link name="link_DRV_${position}">
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder length="${wheel_l}" radius="${wheel_r}"/>
        </geometry>
      </collision>
      <inertial>
          <mass value="${wheel_mass}"/>
          <inertia
              ixx="${wheel_mass / 12.0 * (3 * wheel_r * wheel_r + wheel_l * wheel_l)}"
              iyy="${wheel_mass / 12.0 * (3 * wheel_r * wheel_r + wheel_l * wheel_l)}"
              izz="${wheel_mass / 2.0 * wheel_r * wheel_r}"
              ixy="0"
              ixz="0"
              iyz="0"/>
      </inertial>
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder length="${wheel_l}" radius="${wheel_r}"/>
        </geometry>
      </visual>
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder length="0.104" radius="0.0255"/>
        </geometry>
      </visual>
    </link>
  
    <transmission name="_STR_${position}">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="joint_STR_${position}">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      </joint>
      <actuator name="motor_STR_${position}">
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission>
  
    <transmission name="transmission_DRV_${position}">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="joint_DRV_${position}">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      </joint>
      <actuator name="motor_DRV_${position}">
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission>
  </xacro:macro>

  <!-- Define all the wheel assemblies as set their positions -->
  <!-- LEFT BOGIE  -->
  <xacro:property name="side_bogie_left_name" value="LFB" />
  
  <xacro:bogie position="${side_bogie_left_name}" bogie_mass="${side_bogie_mass}" bogie_r="${side_bogie_r}" bogie_l="${side_bogie_l}">
    <origin xyz="${side_bogie_pos_x} ${side_bogie_pos_y} ${side_bogie_pos_z}" rpy="${- pi / 2} 0 0"/>
    <cylinder length="${side_bogie_l}" radius="${side_bogie_r}"/>
  </xacro:bogie>

  <xacro:wheel_assembly position="LF" bogie_name="${side_bogie_left_name}" driving_direction="1">
    <origin xyz="${side_dep_pos_front_x} ${side_dep_pos_y} ${side_dep_pos_z}" rpy="0 0 0"/>
    <origin xyz="${str_pos_short_x} ${str_pos_y} ${str_pos_z}" rpy="${pi / 2} 0 0"/>
  </xacro:wheel_assembly>

  <xacro:wheel_assembly position="LM" bogie_name="${side_bogie_left_name}" driving_direction="1">
    <origin xyz="-${side_dep_pos_mid_x} ${side_dep_pos_y} ${side_dep_pos_z}" rpy="0 0 0"/>
    <origin xyz="-${str_pos_long_x} ${str_pos_y} ${str_pos_z}" rpy="${pi / 2} 0 0"/>
  </xacro:wheel_assembly>


  <!-- RIGHT BOGIE  -->
  <xacro:property name="side_bogie_right_name" value="RFB" />

  <xacro:bogie position="${side_bogie_right_name}" bogie_mass="${side_bogie_mass}" bogie_r="${side_bogie_r}" bogie_l="${side_bogie_l}">
    <origin xyz="${side_bogie_pos_x} -${side_bogie_pos_y} ${side_bogie_pos_z}" rpy="${- pi / 2} 0 ${pi}"/>
    <cylinder length="${side_bogie_l}" radius="${side_bogie_r}"/>
  </xacro:bogie>

  <xacro:wheel_assembly position="RF" bogie_name="${side_bogie_right_name}" driving_direction="-1">
    <origin xyz="-${side_dep_pos_front_x} ${side_dep_pos_y} ${side_dep_pos_z}" rpy="0 0 0"/>
    <origin xyz="-${str_pos_short_x} ${str_pos_y} ${str_pos_z}" rpy="${pi / 2} 0 0"/>
  </xacro:wheel_assembly>

  <xacro:wheel_assembly position="RM" bogie_name="${side_bogie_right_name}" driving_direction="-1">
    <origin xyz="${side_dep_pos_mid_x} ${side_dep_pos_y} ${side_dep_pos_z}" rpy="0 0 0"/>
    <origin xyz="${str_pos_long_x} ${str_pos_y} ${str_pos_z}" rpy="${pi / 2} 0 0"/>
  </xacro:wheel_assembly>

  <!-- REAR BOGIE  -->
  <xacro:property name="side_bogie_rear_name" value="MRB" />

  <xacro:bogie position="${side_bogie_rear_name}" bogie_mass="${rear_bogie_mass}" bogie_r="${rear_bogie_r}" bogie_l="${rear_bogie_l}">
    <origin xyz="${rear_bogie_pos_x} ${rear_bogie_pos_y} ${rear_bogie_pos_z}" rpy="${- pi / 2} 0 ${pi / 2}"/>
    <cylinder length="${rear_bogie_l}" radius="${rear_bogie_r}"/>
  </xacro:bogie>

  <xacro:wheel_assembly position="LR" bogie_name="${side_bogie_rear_name}" driving_direction="1">
    <origin xyz="${rear_dep_pos_x} ${rear_dep_pos_y} ${rear_dep_pos_z}" rpy="0 ${pi / 2} 0"/>
    <origin xyz="-${str_pos_short_x} ${str_pos_y} ${str_pos_z}" rpy="${pi / 2} 0 0"/>
  </xacro:wheel_assembly>

  <xacro:wheel_assembly position="RR" bogie_name="${side_bogie_rear_name}" driving_direction="-1">
    <origin xyz="-${rear_dep_pos_x} ${rear_dep_pos_y} ${rear_dep_pos_z}" rpy="0 ${3 * pi / 2} 0"/>
    <origin xyz="${str_pos_short_x} ${str_pos_y} ${str_pos_z}" rpy="${pi / 2} 0 0"/>
  </xacro:wheel_assembly>

</robot>
