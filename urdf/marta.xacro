<?xml version="1.0"?>
<robot name="marta" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <xacro:property name="mass" value="1.0" />
  <xacro:property name="damping" value="0.1" />
  <xacro:property name="friction" value="0.1" />
  <xacro:property name="size_base" value="1.0" />
  <xacro:property name="size_link" value="0.25" />
  <!-- Warning: the wheel_radius value must be the same as in the YAML configuration file-->
  <xacro:property name="wheel_radius" value="${size_link / 2}" />

  <xacro:property name="limit_drive_effort" value="100.0" />
  <xacro:property name="limit_drive_velocity" value="1.0" />
  <xacro:property name="limit_steer_effort" value="100.0" />
  <xacro:property name="limit_steer_lower" value="${-pi / 2}" />
  <xacro:property name="limit_steer_upper" value="${pi / 2}" />
  <xacro:property name="limit_steer_velocity" value="1.0" />

  <!-- Import all Gazebo-customization elements, including Gazebo colors and plugins -->
  <xacro:include filename="$(find rover_config)/urdf/rover_dummy.gazebo" />

  <!-- Base of the rover, must be named "base_link" -->
  <link name="base_link">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${size_base} ${size_base} ${size_base / 2}"/>
      </geometry>
    </collision>
    <inertial>
       <mass value="${mass}"/>
        <inertia
            ixx="${mass / 12.0 * (5 * size_base * size_base / 16)}"
            iyy="${mass / 12.0 * (5 * size_base * size_base / 16)}"
            izz="${mass / 12.0 * (size_base * size_base / 2)}"
            ixy="0"
            ixz="0"
            iyz="0"/>
    </inertial>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${size_base} ${size_base} ${size_base / 2}"/>
      </geometry>
    </visual>
  </link>

  <!-- Definition for a wheel assembly -->
  <xacro:macro name="wheel_assembly" params="position configuration *origin">

    <joint name="joint_deploy_${position}" type="revolute">
      <parent link="base_link"/>
      <child link="link_${position}"/>
      <limit effort="${limit_steer_effort}" lower="${limit_steer_lower}" upper="${limit_steer_upper}" velocity="${limit_steer_velocity}"/>
      <xacro:insert_block name="origin" />
      <axis xyz="0 0 1"/>
      <dynamics damping="${damping}" friction="${friction}"/>
    </joint>

    <link name="link_deploy_${position}">
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <box size="${size_link} ${size_link} ${size_link}"/>
        </geometry>
      </collision>
      <inertial>
          <mass value="${mass}"/>
          <inertia
              ixx="${mass / 12.0 * (size_link * size_link / 2)}"
              iyy="${mass / 12.0 * (size_link * size_link / 2)}"
              izz="${mass / 12.0 * (size_link * size_link / 2)}"
              ixy="0"
              ixz="0"
              iyz="0"/>
      </inertial>
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <box size="${size_link} ${size_link} ${size_link}"/>
        </geometry>
      </visual>
    </link>

    <joint name="joint_steer_${position}" type="revolute">
      <parent link="base_link"/>
      <child link="link_${position}"/>
      <limit effort="${limit_steer_effort}" lower="${limit_steer_lower}" upper="${limit_steer_upper}" velocity="${limit_steer_velocity}"/>
      <xacro:insert_block name="origin" />
      <axis xyz="0 0 1"/>
      <dynamics damping="${damping}" friction="${friction}"/>
    </joint>

    <link name="link_steer_${position}">
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <box size="${size_link} ${size_link} ${size_link}"/>
        </geometry>
      </collision>
      <inertial>
          <mass value="${mass}"/>
          <inertia
              ixx="${mass / 12.0 * (size_link * size_link / 2)}"
              iyy="${mass / 12.0 * (size_link * size_link / 2)}"
              izz="${mass / 12.0 * (size_link * size_link / 2)}"
              ixy="0"
              ixz="0"
              iyz="0"/>
      </inertial>
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <box size="${size_link} ${size_link} ${size_link}"/>
        </geometry>
      </visual>
    </link>

    <joint name="joint_drive_${position}" type="continuous">
      <parent link="link_${position}"/>
      <child link="wheel_${position}"/>
      <limit effort="${limit_drive_effort}" velocity="${limit_drive_velocity}"/>
      <origin xyz="0 0 ${-size_link / 2 - 2 * wheel_radius}" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
      <dynamics damping="${damping}" friction="${friction}"/>
    </joint>

    <link name="wheel_${position}">
      <collision>
        <origin xyz="0 0 0" rpy="${pi / 2} 0 0"/>
        <geometry>
          <cylinder length="${size_link}" radius="${wheel_radius}"/>
        </geometry>
      </collision>
      <inertial>
          <mass value="${mass}"/>
          <inertia
              ixx="${mass / 12.0 * (3 * wheel_radius * wheel_radius + size_link * size_link)}"
              iyy="${mass / 12.0 * (3 * wheel_radius * wheel_radius + size_link * size_link)}"
              izz="${mass / 2.0 * wheel_radius * wheel_radius}"
              ixy="0"
              ixz="0"
              iyz="0"/>
      </inertial>
      <visual>
        <origin xyz="0 0 0" rpy="${pi / 2} 0 0"/>
        <geometry>
          <cylinder length="${size_link}" radius="${wheel_radius}"/>
        </geometry>
      </visual>
    </link>
  
    <transmission name=" _steer_${position}">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="joint_steer_${position}">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      </joint>
      <actuator name="motor_steer_${position}">
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission>
  
    <transmission name="transmission_drive_${position}">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="joint_drive_${position}">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      </joint>
      <actuator name="motor_drive_${position}">
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission>
  </xacro:macro>

  <!-- Define all the wheel assemblies as set their positions -->
  <xacro:wheel_assembly position="back_left">
    <origin xyz="${-(size_base / 2 + size_link)} ${(size_base / 2 + size_link)} 0" rpy="0 0 0"/>
  </xacro:wheel_assembly>

  <xacro:wheel_assembly position="back_right">
    <origin xyz="${-(size_base / 2 + size_link)} ${-(size_base / 2 + size_link)} 0" rpy="0 0 0"/>
  </xacro:wheel_assembly>

  <xacro:wheel_assembly position="center_left">
    <origin xyz="0 ${(size_base / 2 + size_link)} 0" rpy="0 0 0"/>
  </xacro:wheel_assembly>

  <xacro:wheel_assembly position="center_right">
    <origin xyz="0 ${-(size_base / 2 + size_link)} 0" rpy="0 0 0"/>
  </xacro:wheel_assembly>

  <xacro:wheel_assembly position="front_left">
    <origin xyz="${(size_base / 2 + size_link)} ${(size_base / 2 + size_link)} 0" rpy="0 0 0"/>
  </xacro:wheel_assembly>

  <xacro:wheel_assembly position="front_right">
    <origin xyz="${(size_base / 2 + size_link)} ${-(size_base / 2 + size_link)} 0" rpy="0 0 0"/>
  </xacro:wheel_assembly>
</robot>
